image:
  tag: 2fc58fe
  pullPolicy: Always
config: |
  ui:
    strftime_fmt: '%d/%m/%Y %H:%M'
  mqtt:
    host: mosquitto.default.svc.cluster.local
  ffmpeg:
    hwaccel_args: preset-vaapi
    output_args:
      record: preset-record-generic-audio-copy
  detectors:
    coral:
      type: edgetpu
      device: usb
      hostPath: /dev/bus/usb/003/002
  record:
    enabled: true
    retain:
      days: 3
      mode: motion
    events:
      retain:
        default: 14
        mode: motion
  birdseye:
    enabled: true
    mode: continuous
  snapshots:
    enabled: true
    retain:
      default: 90
  go2rtc:
    streams:
      front_garden:
        - rtsp://{FRIGATE_RTSP_USER}:{FRIGATE_RTSP_PASSWORD}@192.168.1.163:554/Streaming/Channels/101
        - ffmpeg:front_garden#audio=aac
      front_garden_sub:
        - rtsp://{FRIGATE_RTSP_USER}:{FRIGATE_RTSP_PASSWORD}@192.168.1.163:554/Streaming/Channels/102
        - ffmpeg:front_garden_sub#audio=aac
      back_garden:
        - rtsp://{FRIGATE_RTSP_USER}:{FRIGATE_RTSP_PASSWORD}@192.168.1.162:554/Streaming/Channels/101
        - ffmpeg:back_garden#audio=aac
      back_garden_sub:
        - rtsp://{FRIGATE_RTSP_USER}:{FRIGATE_RTSP_PASSWORD}@192.168.1.162:554/Streaming/Channels/102
        - ffmpeg:back_garden_sub#audio=aac
  cameras:
    front_garden:
      ffmpeg:
        inputs:
          - path: rtsp://127.0.0.1:8554/front_garden
            roles:
              - record
          - path: rtsp://127.0.0.1:8554/front_garden_sub
            roles:
              - detect
      live:
        stream_name: front_garden
      motion:
        threshold: 30
        mask: 0.027,1,0.108,0.838,0.18,0.701,0.245,0.576,0.294,0.487,0.375,0.352,0.446,0.24,0.509,0.143,0.505,0,0,0,0,1
        contour_area: 10
        improve_contrast: 'true'
      zones:
        front_door:
          coordinates: 0.881,0.74,0.848,0.714,0.863,0.616,0.576,0.745,0.473,1,0.818,1
          loitering_time: 0
          objects:
            - person
            - dog
          inertia: 3
        front_enterance:
          coordinates: 0.913,0,0.44,0,0.22,0.375,0.864,0.533,0.887,0.352
          loitering_time: 0
          inertia: 1
      review:
        alerts:
          required_zones:
            - front_door
            - front_enterance
    back_garden:
      ffmpeg:
        inputs:
          - path: rtsp://127.0.0.1:8554/back_garden
            roles:
              - record
          - path: rtsp://127.0.0.1:8554/back_garden_sub
            roles:
              - detect
      live:
        stream_name: back_garden
      motion:
        threshold: 45
        mask:
          - 0.189,0.304,0,0.404,0,0,0.703,0,0.706,0.031,0.481,0.124
          - 1,0,0.856,0,0.839,0.46,0.834,0.824,0.846,0.851,0.834,1,1,1
        contour_area: 10
        improve_contrast: 'true'
      objects:
        mask:
          - 0.189,0.304,0,0.404,0,0,0.703,0,0.706,0.031,0.481,0.124
          - 1,0,0.856,0,0.839,0.46,0.834,0.824,0.846,0.851,0.834,1,1,1
      zones:
        back_enterance:
          coordinates: 0.234,0.338,0.191,0.305,0.252,0.262,0.318,0.384,0.471,0.406,0.442,0.548,0.453,0.734,0.536,0.829,0.644,0.838,0.754,0.803,0.833,0.816,0.834,0.843,0.848,0.847,0.837,0.999,0.331,0.999,0.305,0.946,0.258,0.668,0.232,0.451,0.229,0.399,0.24,0.385
          loitering_time: 0
          inertia: 2
      review:
        alerts:
          required_zones:
            - back_enterance
  objects:
    track:
      - person
      - dog
      - car
  review:
    alerts:
      labels:
        - person
  version: 0.14
  camera_groups:
    cameras:
      order: 1
      icon: LuWebcam
      cameras:
        - back_garden
        - front_garden
ingress:
  # -- Enables the use of an Ingress Controller to front the Service and can provide HTTPS
  enabled: true
  # -- ingressClassName for using on clusters with multiple ingresses, default is null
  ingressClassName: public
  # -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: frigate-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    nginx.ingress.kubernetes.io/server-snippet: |
      satisfy any;
      allow 192.168.1.0/24;
      deny all;
  # -- list of hosts and their paths that ingress controller should repsond to.
  hosts:
    - host: frigate.kennedn.com
      paths:
        - '/'
  # -- list of TLS configurations
  tls:
    - secretName: frigate-tls
      hosts:
        - frigate.kennedn.com
persistence:
  media:
    enabled: true
    accessMode: ReadWriteOnce
    size: 10Gi
    skipuninstall: true
  config:
    enabled: true
    accessMode: ReadWriteOnce
    size: 10Gi
    skipuninstall: true
